{"version":3,"sources":["../src/router.js"],"names":["$routes","$methods","requireHandler","path","obj","require","default","makeRoute","methods","uri","action","callable","method","indexOf","Error","split","object","Array","isArray","addRoute","route","Router","constructor","verb","get","post","put","patch","delete","only","any","group","find","request","routes","k","hasOwnProperty","regexp","RegExp","match","exec","keys","values","pattern","replace","_","val","push","params","key","dispatch","ctx","next","error","throw","handle"],"mappings":"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","file":"router.js","sourcesContent":["\"use strict\";\n\nimport Route from \"./route\";\n\nvar $routes = {},\n    $methods = [\n        \"GET\",\n        \"HEAD\",\n        \"POST\",\n        \"PUT\",\n        \"PATCH\",\n        \"DELETE\"\n    ];\n\nfunction requireHandler(path) {\n    var obj = require(path);\n\n    if ((typeof obj[\"__esModule\"] !== \"undefined\") && (obj[\"__esModule\"] === true)) {\n        return obj.default;\n    }\n\n    if (typeof obj[\"default\"] !== \"undefined\") {\n        return obj.default;\n    }\n\n    return obj;\n}\n\nfunction makeRoute(methods, uri, action) {\n    var callable;\n\n    // Validating route methods\n    for (let method of methods) {\n        if ($methods.indexOf(method) < 0) {\n            throw new Error(`Invalid route method: ${method}.`);\n        }\n    }\n\n    // Resolve route callback\n    if (typeof action === \"string\") {\n        callable = async function () {\n            var [path, method] = action.split(\"@\"),\n                object = new (requireHandler(path));\n\n            return await object[method];\n        };\n    } else if (typeof action === \"object\" && Array.isArray(action)) {\n        callable = async function () {\n            var [path, method] = action,\n                object = new (requireHandler(path));\n\n            return await object[method];\n        };\n    } else if (typeof action === \"object\") {\n        // TODO:\n    } else if (typeof action === \"function\") {\n        callable = async function () {\n            return await action;\n        };\n    } else {\n        throw new Error(\"Invalid route callback.\");\n    }\n\n    return new Route(methods, uri, callable);\n}\n\nfunction addRoute(methods, uri, action) {\n    var route = makeRoute(methods, uri, action);\n\n    for (var method of methods) {\n        if (typeof $routes[method] !== \"undefined\") {\n            $routes[method][uri] = route;\n        }\n    }\n\n    return route;\n}\n\nclass Router {\n    constructor() {\n        for (var verb of $methods) {\n            $routes[verb] = {};\n        }\n    }\n\n    get(uri, action) {\n        return addRoute([\"GET\", \"HEAD\"], uri, action);\n    }\n\n    post(uri, action) {\n        return addRoute([\"POST\"], uri, action);\n    }\n\n    put(uri, action) {\n        return addRoute([\"PUT\"], uri, action);\n    }\n\n    patch(uri, action) {\n        return addRoute([\"PATCH\"], uri, action);\n    }\n\n    delete(uri, action) {\n        return addRoute([\"DELETE\"], uri, action);\n    }\n\n    only(methods, uri, action) {\n        return addRoute(methods, uri, action);\n    }\n\n    any(uri, action) {\n        return addRoute($methods, uri, action);\n    }\n\n    // TODO:\n    group() {\n\n    }\n\n    find(request) {\n        var routes = typeof $routes[request.method] !== \"undefined\" ? $routes[request.method] : [];\n\n        for (let k in routes) {\n            if (routes.hasOwnProperty(k)) {\n                var route = routes[k],\n                    regexp = new RegExp(`^${route.path}$`),\n                    match = regexp.exec(request.path);\n\n                if (match !== null) {\n                    return route;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    match(request) {\n        var routes = typeof $routes[request.method] !== \"undefined\" ? $routes[request.method] : [];\n\n        for (let k in routes) {\n            if (routes.hasOwnProperty(k)) {\n                var route = routes[k],\n                    path = route.path;\n\n                var keys = [],\n                    values = [],\n                    pattern = path.replace(/(?:{(\\w+)})/g, function (_, val) {\n                        keys.push(val);\n\n                        return \"(\\\\w+)\";\n                    });\n\n                if ((new RegExp(`^${pattern}$`)).exec(request.path) !== null) {\n                    request.path.replace(new RegExp(`^${pattern}$`), function (_, val) {\n                        values.push(val);\n                    });\n\n                    var params = {};\n\n                    for (let key in keys) {\n                        params[keys[key]] = values[key];\n                    }\n\n                    return [route, params];\n                }\n            }\n        }\n\n        throw new Error(\"No route matching this request.\");\n    }\n\n    async dispatch(ctx, next) {\n        ctx.request.route = null;\n        ctx.request.params = {};\n\n        try {\n            var [route, params] = this.match(ctx.request);\n        } catch (error) {\n            ctx.throw(404);\n        }\n\n        ctx.request.route = route;\n        ctx.request.params = params;\n\n        return await route.handle(ctx, next);\n    }\n\n    get routes() {\n        return $routes;\n    }\n}\n\nexport default Router;"]}